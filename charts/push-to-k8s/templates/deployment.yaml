apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "push-to-k8s.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "push-to-k8s.labels" . | nindent 4 }}
  {{- if .Values.settings.metrics.enabled }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.settings.metrics.port }}"
    prometheus.io/path: "/metrics"
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "push-to-k8s.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if .Values.settings.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.settings.metrics.port }}"
        prometheus.io/path: "/metrics"
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "push-to-k8s.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "push-to-k8s.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: {{ .Values.settings.metrics.port }}
              protocol: TCP
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: metrics
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          env:
            - name: DEBUG
              value: "{{ .Values.settings.debug }}"
            - name: METRICS_PORT
              value: "{{ .Values.settings.metrics.port }}"
            - name: EXCLUDE_NAMESPACE_LABEL
              value: "{{ .Values.settings.ExcludeNamespaceLabel }}"
            - name: SYNC_INTERVAL
              value: "{{ .Values.settings.SyncInterval }}"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
