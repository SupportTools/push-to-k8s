---
# Example secret with the push-to-k8s=source label
# This label tells the controller to sync this secret to all other namespaces
#
# Usage:
#   kubectl apply -f examples/source-namespace.yaml
#   kubectl apply -f examples/test-secret.yaml
#
# After applying, the controller will automatically sync this secret to all
# namespaces except:
# - The source namespace (push-to-k8s)
# - Namespaces with the exclusion label (if configured)
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: push-to-k8s
  labels:
    push-to-k8s: source
type: Opaque
stringData:
  username: admin
  password: changeme
  registry: docker.io
---
# Another example secret for API keys
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
  namespace: push-to-k8s
  labels:
    push-to-k8s: source
type: Opaque
stringData:
  github-token: ghp_example_token_1234567890
  slack-webhook: https://hooks.slack.com/services/example
---
# Example TLS secret
apiVersion: v1
kind: Secret
metadata:
  name: tls-cert
  namespace: push-to-k8s
  labels:
    push-to-k8s: source
type: kubernetes.io/tls
stringData:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIICEjCCAXsCAg36MA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
    A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
    MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
    YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
    ODIyMDUyNjU0WhcNMTcwODIxMDUyNjU0WjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
    CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
    ZS5jb20wXDANBgkqhkiG9w0BAQEFAANLADBIAkEAm/xmkHmEQrurE/0re/jeFRLl
    8ZPjBop7uLHhnia7lQG/5zDtZIUC3RVpqDSwBuw/NTweGyuP+o8AG98HxqxTBwID
    AQABMA0GCSqGSIb3DQEBBQUAA4GBABS2TLuBeTPmcaTaUW/LCB2NYOy8GMdzR1mx
    8iBIu2H6/E2tiY3RIevV2OW61qY2/XRQg7YPxx3ffeUugX9F4J/iPnnu1zAxzyYw
    ln/hH6WdR3RwOdAkKZfPJmMQ5h+xvWZhZFz8T3PuVzI1pJvCYGe7WLWbCcU8Wjqw
    6QQ8s9AA
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIBOwIBAAJBAJv8ZpB5hEK7qxP9K3v43hUS5fGT4waKe7ix4Z4mu5UBv+cw7WSF
    At0VaKg0sAbsPzU8HhsrJ/qPABvfB8asUwcCAwEAAQJAE/9sGfcUoMnhDuDJpMj7
    5+FGmjEBMIBKHvAFbY6SL0MrPkbYDZTfPABqGYnbkf/BnPPQMmH0WQqfkGqEPBIv
    sQIhAL6N9iEKFpMtIX5HpXXJ8o2sSBW+TqkJqAEqxdlMQFqzAiEAuLz7cjBOxjqZ
    dHcgJqrKFfhvOLYwfdhGw7lRCLLF4XkCIQCwWxQIJBBYA4T4eBWQVNxLr8wU/fRQ
    wJ6u6RBCh8rVrwIgBN8gDPLPhd2z9J/V4gGLDhHOZNUqHlUBrJvqQjGZyUECIQCK
    wXhS2NbKHa2qDJNS/7TfjAm2jSF8BqD3TLYdCJLl1A==
    -----END RSA PRIVATE KEY-----
